[gd_scene load_steps=7 format=3 uid="uid://coixamjap8rm"]

[ext_resource type="PackedScene" uid="uid://2620a1hdagy2" path="res://models/melee_spells/water_whip/WaterWhip.glb" id="1_ct76h"]
[ext_resource type="Texture2D" uid="uid://jqxs2ing4i2g" path="res://models/melee_spells/water_whip/water_noise.png" id="2_ct76h"]
[ext_resource type="Texture2D" uid="uid://qa77uowc8eor" path="res://models/melee_spells/water_whip/water_diff.png" id="2_hmpwm"]
[ext_resource type="Texture2D" uid="uid://buristm1vex37" path="res://models/melee_spells/water_whip/water_roughness.png" id="3_ct76h"]

[sub_resource type="Shader" id="Shader_2smfq"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.4.stable.mono's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_burley, specular_schlick_ggx;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform float alpha_hash_scale : hint_range(0.0, 2.0, 0.01);
uniform ivec2 albedo_texture_size;
uniform float point_size : hint_range(0.1, 128.0, 0.1);

uniform float roughness : hint_range(0.0, 1.0);
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r, filter_linear_mipmap, repeat_enable;

uniform float specular : hint_range(0.0, 1.0, 0.01);
uniform float metallic : hint_range(0.0, 1.0, 0.01);

uniform sampler2D texture_emission : source_color, hint_default_black, filter_linear_mipmap, repeat_enable;
uniform vec4 emission : source_color;
uniform float emission_energy : hint_range(0.0, 100.0, 0.01);

//noise
uniform sampler2D noise;
uniform float distortion_intensity = 0.1;

uniform vec2 distortion_tiling = vec2(1.0, 1.0);
uniform vec2 distortion_offset_speed;

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

uniform float speed = 0.1;

void vertex() {
	UV = UV * uv1_scale.xy + uv1_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;
	
	vec2 noise_uv = UV * distortion_tiling + distortion_offset_speed * TIME;
	float noise_tex = texture(noise, noise_uv).r;
	vec2 distortion_uv = base_uv + noise_tex * distortion_intensity;
	
    distortion_uv.y += TIME * speed;

	vec4 albedo_tex = texture(texture_albedo, distortion_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;

	float metallic_tex = dot(texture(texture_metallic, base_uv), metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	SPECULAR = specular;

	vec4 roughness_texture_channel = vec4(1.0, 0.0, 0.0, 0.0);
	float roughness_tex = dot(texture(texture_roughness, base_uv), roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;

	// Emission: Enabled
	vec3 emission_tex = texture(texture_emission, base_uv).rgb;
	// Emission Operator: Add
	EMISSION = (emission.rgb + emission_tex) * emission_energy;
	ALPHA *= albedo.a * albedo_tex.a;
	ALPHA_HASH_SCALE = alpha_hash_scale;
	
	
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_p1p7k"]
render_priority = 0
shader = SubResource("Shader_2smfq")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/texture_albedo = ExtResource("2_hmpwm")
shader_parameter/alpha_hash_scale = 1.0
shader_parameter/albedo_texture_size = Vector2i(1024, 1024)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = Vector4(0, 0, 0, 0)
shader_parameter/texture_roughness = ExtResource("3_ct76h")
shader_parameter/specular = 0.0
shader_parameter/metallic = 0.0
shader_parameter/emission = Color(0, 0, 0, 1)
shader_parameter/emission_energy = 0.0
shader_parameter/noise = ExtResource("2_ct76h")
shader_parameter/distortion_intensity = 0.415
shader_parameter/distortion_tiling = Vector2(1, 1)
shader_parameter/distortion_offset_speed = Vector2(0, 0.1)
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/speed = 0.1

[node name="WaterWhip" type="Node3D"]

[node name="WaterWhip2" parent="." instance=ExtResource("1_ct76h")]

[node name="WaterWhip" parent="WaterWhip2" index="0"]
surface_material_override/0 = SubResource("ShaderMaterial_p1p7k")

[editable path="WaterWhip2"]
